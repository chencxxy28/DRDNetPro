l[46,]<-c(-0.7,-0.7)
l[8,]<-c(0.7,-0.7)
#l<-layout_in_circle(net.bg)
#l<-layout_as_star(net.bg,center=V(net)[1:3])
#l<-layout_as_bipartite(net.bg)
#l<-layout_on_grid(net.bg)
#l<-layout_on_sphere(net.bg)
#l<-layout_with_sugiyama(net.bg)
#l<-layout_with_dh(net.bg)
# Normalize them so that they are in the -1, 1 interval:
#l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
gene_names_used<-as.character(gene_exact_names$gene.name[nodes_gene$id])
#gene_names_used[which(gene_names_used=="CTSD\xca")]<-"CTSD"
plot.igraph(net.bg, rescale=F, layout=l,edge.arrow.size=.1, edge.curved=.2,vertex.label=gene_names_used,
vertex.label.color="blue",vertex.label.cex=1,mark.border=NA)
}
##network for x=0 at i=250 after some tuning
par(mfrow = c(1, 1))
par(cex=1)
par(mar = c(0, 0, 0, 0), oma = c(6, 6, 3, 3))
tunned_value<-0.03
for (i in c(250))
{
tunning_index<-apply(gene_whole_all,1,function (x) ifelse((abs(x[i+2]))>=tunned_value,1,0))
gene_whole_all_tuned<-gene_whole_all[which(tunning_index==1),]
tunning_index<-apply(gene_whole,1,function (x) ifelse((abs(x[i+2]))>=tunned_value,1,0))
gene_whole_tuned<-gene_whole[which(tunning_index==1),]
dim(gene_whole_tuned)
unique(gene_whole_tuned[,2])
table(gene_whole_tuned[,2])
#geneate link data with 25th tissue
links_gene<-gene_whole_tuned[,c(1,2,i+2)]
colnames(links_gene)<-c("from","to","tissue_name")
links_gene<-as.data.frame(links_gene)
links_gene$edge_type<-ifelse(gene_whole_tuned[,i+2]>0,1,2)
rownames(links_gene)<-rep(1:nrow(links_gene))
self_index_all<-unique(c(gene_whole_all_tuned[,1],gene_whole_all_tuned[,2],gene_whole_tuned[,1],gene_whole_tuned[,2]))
self_index<-unique(c(gene_whole_tuned[,1],gene_whole_tuned[,2]))
#nodes_gene<-data.frame(cbind(self_index,self_size[self_index,(i+1)]))
nodes_gene<-data.frame(self_size[self_size[,1] %in% self_index,c(1,(i+1))])
colnames(nodes_gene)<-c("id","self_weight")
#nodes_gene<-data.frame(self_size[,c((i+1))])
#colnames(nodes_gene)<-c("self_weight")
nodes_gene$node_type<-ifelse(nodes_gene$id %in% c(39,40,48,64,76),1, ifelse(nodes_gene$id %in% (self_index),2,3))
#nodes_gene$node_type<-ifelse(nodes_gene$id %in% self_index,3,4)
net <- graph.data.frame(links_gene, nodes_gene, directed=T)
class(net)
net
# It's easy to access nodes, edges, and their attributes:
E(net)
V(net)$self_weight
E(net)$tissue_name
V(net) #total 47 clusters included in the network
# Now we should be able to do this:
#plot(net, edge.arrow.size=.2,vertex.label.family="Arial Black" )
#adjust size of nodes and width of edges
colrs_nodes <- c("red","orange","gray")
V(net)$color <- colrs_nodes[V(net)$node_type]
colrs_edge<-c("tomato","gray40")
E(net)$color <- colrs_edge[E(net)$edge_type]
V(net)$size <- (V(net)$self_weight)^0.7*4
E(net)$width <- (abs(E(net)$tissue_name))^0.4*7
#change coordinate to separate the nodes
#set.seed(41414343)
net.bg<-net
set.seed(4151320)
l<-layout_nicely(net.bg)
l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
l[20,]<-c(-0.9,0.1)
l[16,]<-c(0.7,-0.5)
l[46,]<-c(-0.7,-0.7)
l[8,]<-c(0.7,-0.7)
#l<-layout_in_circle(net.bg)
#l<-layout_as_star(net.bg,center=V(net)[1:3])
#l<-layout_as_bipartite(net.bg)
#l<-layout_on_grid(net.bg)
#l<-layout_on_sphere(net.bg)
#l<-layout_with_sugiyama(net.bg)
#l<-layout_with_dh(net.bg)
# Normalize them so that they are in the -1, 1 interval:
#l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
gene_names_used<-as.character(gene_exact_names$gene.name[nodes_gene$id])
#gene_names_used[which(gene_names_used=="CTSD\xca")]<-"CTSD"
plot.igraph(net.bg, rescale=F, layout=l,edge.arrow.size=.1, edge.curved=.2,vertex.label=gene_names_used,
vertex.label.color="blue",vertex.label.cex=0.7,mark.border=NA)
}
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
build_home_index(); init_site()
build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown()
usethis::use_pkgdown()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::nit_site()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
rlang::last_error()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
rlang::last_error()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/chixiang.chen/OneDrive - University of Maryland School of Medicine/phd_in_psu/research/Prof._Wu/Network/tissue/blood_vessel/')
library(DRDNetPro)
library(np)
library(splines2)
library(grpreg)
library(Matrix)
#read the data
pheno_together<-read.csv("pheno_together.csv") # phenotype data
data_vessel<-read.csv("data_vessel.csv") # gene expression data
rownames(data_vessel)<-data_vessel[,1]
data_vessel<-data_vessel[,-1]
dim(data_vessel)
#delete gene with all zeros
row_mean<-apply(data_vessel,1, mean)
data_vessel<-data_vessel[row_mean>0,]
dim(data_vessel)
#let the gene expression equal to zero if it's less than 1 level:
data_vessel[data_vessel<=1]<-0
dim(data_vessel)
which(data_vessel<=1 & data_vessel>0)
#count zeros in each row:
zero_row<-apply(data_vessel,1,function (x) length(which(x==0)))
summary(zero_row)
#do log transformation
data_vessel[data_vessel!=0]<-log(data_vessel[data_vessel!=0])
dim(data_vessel)
#set threshold about zeros:
data_vessel<-data_vessel[zero_row<=0,]
dim(data_vessel)
write.csv(data_vessel,"data_vessel_processed.csv",row.names =F)
data_vessel<-read.csv("data_vessel_processed.csv") # read preprocessed gene expression data
vessel_subject_id<-substring(colnames(data_vessel),6,10)
vessel_subject_id<-ifelse(substring(vessel_subject_id,5,5)==".",substring(vessel_subject_id,1,4),substring(vessel_subject_id,1,5))
vessel_together<-data.frame(cbind(vessel_subject_id,1))
colnames(vessel_together)<-c("id","haha")
index_data<-merge(x=vessel_together,y=pheno_together,by.x="id",all.x=T,sort=F)
dim(index_data)
index_utilized<-readRDS(file = "index_utilized.rds")
index<-as.numeric(as.matrix(index_data$rate,ncol=1))
data_vessel_order<-data_vessel[,order(index)] #order the gene matrix based on the order of the agent
x_original<-t(data_vessel_order)
data_observe<-x_original[,index_utilized] #focus on the selected 85 gene expressions
agent<-index[order(index)] #order the agent
smk_cov<-index_data$smoke[order(index)]
#further refine the data by deleting the data with agent too close to each other, this step is highly recommended in practice. Here we set the threshod=0.0001
data_observe<-data_observe[c(1,diff(agent,lag=1))>=0.0001,]
x_cov<-smk_cov[c(1,diff(agent,lag=1))>=0.0001]
agent<-agent[c(1,diff(agent,lag=1))>=0.0001]
data.vcfit<-readRDS(file = "data.vcfit.rds")
id_sub<-8
{par(mfrow = c(1, 2))
#for smoking group
plot(x=agent[x_cov==1],y=data_observe[x_cov==1,id_sub],col="red",frame = FALSE,ylab="Expression",xlab="Agent",main="Smoking")
lines(y=data.vcfit$data_fitted[,id_sub]+data.vcfit$data_fitted_cov[,id_sub],x=agent,col="red")
#for non-smoking group
plot(x=agent[x_cov==0],y=data_observe[x_cov==0,id_sub],col="blue",ylab="Expression",xlab="Agent",main="Non-smoking")
lines(y=data.vcfit$data_fitted[,id_sub],x=agent,col="blue")}
devtools::document()
devtools::check()
devtools::check()
library(usethis)
add_github_actions_check_badge()
usethis::use_github_action_check_standard()
devtools::document()
devtools::check()
usethis::use_github_action_check_standard()
usethis::use_github_action_check_standard()
usethis::use_github_action_check_standard()
devtools::document()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(
fig.path = "man/figures/"
)
pkgdown::build_site()
knitr::opts_chunk$set(
fig.path = "man/figures/"
)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
