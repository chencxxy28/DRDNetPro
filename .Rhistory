net.bg<-net
set.seed(4151320)
l<-layout_nicely(net.bg)
l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
l[20,]<-c(-0.9,0.1)
l[16,]<-c(0.7,-0.5)
l[46,]<-c(-0.7,-0.7)
l[8,]<-c(0.7,-0.7)
#l<-layout_in_circle(net.bg)
#l<-layout_as_star(net.bg,center=V(net)[1:3])
#l<-layout_as_bipartite(net.bg)
#l<-layout_on_grid(net.bg)
#l<-layout_on_sphere(net.bg)
#l<-layout_with_sugiyama(net.bg)
#l<-layout_with_dh(net.bg)
# Normalize them so that they are in the -1, 1 interval:
#l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
gene_names_used<-as.character(gene_exact_names$gene.name[nodes_gene$id])
#gene_names_used[which(gene_names_used=="CTSD\xca")]<-"CTSD"
plot.igraph(net.bg, rescale=F, layout=l,edge.arrow.size=.1, edge.curved=.2,vertex.label=gene_names_used,
vertex.label.color="blue",vertex.label.cex=0.7,mark.border=NA)
}
{par(mfrow = c(1, 3))
tunned_value<-0.01
for (i in c(10,100,250))
{
tunning_index<-apply(gene_whole_cov,1,function (x) ifelse((abs(x[i+2]))>=tunned_value,1,0))
gene_whole_cov_tuned<-gene_whole_cov[which(tunning_index==1),]
dim(gene_whole_cov_tuned)
unique(gene_whole_cov_tuned[,2])
table(gene_whole_cov_tuned[,2])
#geneate link data with 25th tissue
links_gene<-gene_whole_cov_tuned[,c(1,2,i+2)]
colnames(links_gene)<-c("from","to","tissue_name")
links_gene<-as.data.frame(links_gene)
links_gene$edge_type<-ifelse(gene_whole_cov_tuned[,i+2]>0,1,2)
rownames(links_gene)<-rep(1:nrow(links_gene))
#self_index_all<-unique(c(gene_whole_tuned[,1],gene_whole_tuned[,2],gene_whole_cov_tuned[,1],gene_whole_cov_tuned[,2]))
self_index_cov<-unique(c(gene_whole_cov_tuned[,1],gene_whole_cov_tuned[,2]))
self_index_all<-self_index_cov
#nodes_gene<-data.frame(cbind(self_index,self_size[self_index,(i+1)]))
nodes_gene<-abs(data.frame(self_size_cov[self_size_cov[,1] %in% self_index_all,c(1,(i+1))]))
colnames(nodes_gene)<-c("id","self_weight")
#nodes_gene<-data.frame(self_size[,c((i+1))])
#colnames(nodes_gene)<-c("self_weight")
nodes_gene$node_type<-ifelse(nodes_gene$id %in% (self_index_cov),3,4)
net <- graph.data.frame(links_gene, nodes_gene, directed=T)
class(net)
net
# It's easy to access nodes, edges, and their attributes:
E(net)
V(net)$self_weight
E(net)$tissue_name
V(net) #total 34 clusters included in the network
# Now we should be able to do this:
#plot(net, edge.arrow.size=.2,vertex.label.family="Arial Black" )
#adjust size of nodes and width of edges
colrs_nodes <- c("red", "green","orange","gray")
V(net)$color <- colrs_nodes[V(net)$node_type]
colrs_edge<-c("tomato","gray40")
E(net)$color <- colrs_edge[E(net)$edge_type]
V(net)$size <- (V(net)$self_weight)^0.7*4
E(net)$width <- (abs(E(net)$tissue_name))^0.4*7
net.bg<-net
set.seed(4151320)
l<-layout_nicely(net.bg)
l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
#l[1,2]<-0.3
#l[3,2]<-0.7
#l[25,2]<--0.5
#l[23,2]<-0
#l[14,2]<--0.6
#l[8,]<-c(-0.9,-0.35)
#l[16,1]<-0.4
#l[15,1]<--0.2
#l<-layout_in_circle(net.bg)
#l<-layout_as_star(net.bg,center=V(net)[1:3])
#l<-layout_as_bipartite(net.bg)
#l<-layout_on_grid(net.bg)
#l<-layout_on_sphere(net.bg)
#l<-layout_with_sugiyama(net.bg)
#l<-layout_with_dh(net.bg)
# Normalize them so that they are in the -1, 1 interval:
l <- layout.norm(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
gene_names_used<-as.character(gene_exact_names$gene.name[nodes_gene$id])
gene_names_used[which(gene_names_used=="CTSD\xca")]<-"CTSD"
plot.igraph(net.bg, rescale=F, layout=l*0.9,edge.arrow.size=.12, edge.curved=.2,vertex.label=gene_names_used,
vertex.label.color="blue",vertex.label.cex=0.7,mark.border=NA)
}
}
names(network.output)
#for nonsmoking group
gene_61_data<-gene_whole[gene_whole[,2]==61,][,-c(1,2)]
affecting_genes<-gene_whole[gene_whole[,2]==61,][,1]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
gene_61_data_tuned<-gene_61_data[magnitude>=0.02,]
affecting_genes_tuned<-affecting_genes[magnitude>=0.02]
smoking_effect_all=network.output$smoking_effect_all
trend_base_all=network.output$trend_base_all
trend_smoking_effect_all=network.output$trend_smoking_effect_all
#for nonsmoking group
gene_61_data<-gene_whole[gene_whole[,2]==61,][,-c(1,2)]
affecting_genes<-gene_whole[gene_whole[,2]==61,][,1]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
gene_61_data_tuned<-gene_61_data[magnitude>=0.02,]
affecting_genes_tuned<-affecting_genes[magnitude>=0.02]
smoking_effect_all[61]
trend_base_all[,61]
trend_smoking_effect_all[,61]
trend_data<-as.data.frame(cbind(trend_base_all[,61],t))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
library(ggplot2)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
p1
trend_data<-as.data.frame(cbind(trend_base_all[,61],t))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
dim(trend_data)
head(trend_data)
head(trend_base_all[,61])
trend_data<-as.data.frame(cbind(trend_base_all[,61],agent))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
p1
#for nonsmoking group
gene_61_data<-gene_whole[gene_whole[,2]==50,][,-c(1,2)]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
gene_61_data_tuned<-gene_61_data[magnitude>=0.02,]
affecting_genes_tuned<-affecting_genes[magnitude>=0.02]
smoking_effect_all[50]
trend_base_all[,50]
trend_base_all[,50]
trend_smoking_effect_all[,50]
trend_data<-as.data.frame(cbind(trend_base_all[,61],agent))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
p1
trend_data<-as.data.frame(cbind(trend_base_all[,50],agent))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
p1
length(gene_exact_names$gene.name)
which(gene_exact_names$gene.name=="TSPO")
#for nonsmoking group
gene_61_data<-gene_whole[gene_whole[,2]==64,][,-c(1,2)]
affecting_genes<-gene_whole[gene_whole[,2]==64,][,1]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
#for nonsmoking group
gene_61_data<-gene_whole[gene_whole[,2]==64,][,-c(1,2)]
dim(gene_whole)
gene_whole[,2]
gene_whole[gene_whole[,2]==64,]
which(gene_exact_names$gene.name=="C3of70")
which(gene_exact_names$gene.name=="C3orf70")
#select a gene: C3orf70
index.gene<-which(gene_exact_names$gene.name=="C3orf70")
#for nonsmoking group
gene_61_data<-gene_whole[gene_whole[,2]==index.gene,][,-c(1,2)]
affecting_genes<-gene_whole[gene_whole[,2]==index.gene,][,1]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
gene_61_data_tuned<-gene_61_data[magnitude>=0.02,]
affecting_genes_tuned<-affecting_genes[magnitude>=0.02]
smoking_effect_all[index.gene]
trend_base_all[,64]
trend_base_all[,index.gene]
trend_smoking_effect_all[index.gene]
trend_data<-as.data.frame(cbind(trend_base_all[,index.gene],agent))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
p1
gene_61_data_tuned_new<-c(gene_61_data_tuned[1,],gene_61_data_tuned[2,])
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(t,time=2))
gene_61_data_tuned_new<-c(gene_61_data_tuned[1,],gene_61_data_tuned[2,])
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=2))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
gene_61_data_tuned_new$genes<-rep(c("NTN1","RCN3"),each=length(agent))
head(gene_61_data_tuned_new)
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1),each=length(t)))+scale_color_manual(values=c("red", "blue")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")
p2
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")
p2
dim(gene_61_data_tuned_new)
head(gene_61_data_tuned_new)
head(gene_61_data_tuned)
which(magnitude>0.02)
length(affecting_genes)
affecting_genes
dim(gene_whole)
gene_whole[1:5,1:4]
affecting_genes[which(magnitude>0.02)]
index_affectinggenes<-affecting_genes[which(magnitude>0.02)]
index_affectinggenes
gene_exact_names$gene.name[index_affectinggenes]
affecting_genes_tuned
length(magnitude)
dim(gene_61_data)
#select a gene: C3orf70
index.gene<-which(gene_exact_names$gene.name=="C3orf70")
#extract information about the target gene and affecting genes
gene_61_data<-gene_whole[gene_whole[,2]==index.gene,][,-c(1,2)]
affecting_genes<-gene_whole[gene_whole[,2]==index.gene,][,1]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
gene_61_data_tuned<-gene_61_data[magnitude>=0.02,]
affecting_genes_tuned<-affecting_genes[magnitude>=0.02]
name_affectgene<-gene_exact_names$gene.name[affecting_genes_tuned]
#plot trend effect
trend_data<-as.data.frame(cbind(trend_base_all[,index.gene],agent))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene TSPO", x="Hypertension_probability", y="Trend effect")
p1
dim(gene_61_data_tuned)
#plot interaction effects
gene_61_data_tuned_new<-c(gene_61_data_tuned)
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=3))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
name_affectgene
gene_61_data_tuned_new$genes<-rep(name_affectgene,each=length(agent))
head(gene_61_data_tuned_new)
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")
multiplot(p1, p2, cols=2)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, cols=2)
p2
name_affectgene
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")
multiplot(p1, p2, cols=2)
dim(gene_61_data_tuned_new)
head(gene_61_data_tuned_new)
#plot interaction effects
gene_61_data_tuned_new<-c(gene_61_data_tuned)
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=3))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
gene_61_data_tuned_new$genes<-rep(name_affectgene,each=length(agent))
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")
p2
dim(gene_61_data_tuned)
#plot interaction effects
gene_61_data_tuned_new<-c(t(gene_61_data_tuned))
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=3))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
gene_61_data_tuned_new$genes<-rep(name_affectgene,each=length(agent))
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")
multiplot(p1, p2, cols=2)
?geom_point
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene TSPO", x="Hypertension_probability", y="Effects from other genes")+ guides(shape = guide_legend(override.aes = list(size = 0.5)))
multiplot(p1, p2, cols=2)
p1
p2
#select a gene: C3orf70
index.gene<-which(gene_exact_names$gene.name=="C3orf70")
#extract information about the target gene and affecting genes
gene_61_data<-gene_whole[gene_whole[,2]==index.gene,][,-c(1,2)]
affecting_genes<-gene_whole[gene_whole[,2]==index.gene,][,1]
magnitude<-apply(gene_61_data,1,function (x) mean(abs(x)))
gene_61_data_tuned<-gene_61_data[magnitude>=0.02,]
affecting_genes_tuned<-affecting_genes[magnitude>=0.02]
name_affectgene<-gene_exact_names$gene.name[affecting_genes_tuned]
smoking_effect_all[index.gene]
#plot trend effect
trend_data<-as.data.frame(cbind(trend_base_all[,index.gene],agent))
colnames(trend_data)<-c("trend_effect","hypertension_probability")
trend_data$line<-"trend_effect"
head(trend_data)
p1 <- ggplot(trend_data, aes(x=hypertension_probability, y=trend_effect)) +
geom_line(colour = "darkblue",size=1) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Linear trend effect for the gene C3orf70", x="Hypertension_probability", y="Trend effect")
p1
#plot interaction effects
gene_61_data_tuned_new<-c(t(gene_61_data_tuned))
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=3))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
gene_61_data_tuned_new$genes<-rep(name_affectgene,each=length(agent))
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_probability", y="Effects from other genes")
p2
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(0.5,0.5,0.5),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_probability", y="Effects from other genes")
p2
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(alpha=rep(c(0.1,0.1,0.1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_probability", y="Effects from other genes")
p2
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(size=0.5,alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_probability", y="Effects from other genes")
p2
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(size=0.8,alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_probability", y="Effects from other genes")
p2
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(size=1,alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_probability", y="Effects from other genes")
p2
#plot interaction effects
gene_61_data_tuned_new<-c(t(gene_61_data_tuned))
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=3))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
gene_61_data_tuned_new$genes<-rep(name_affectgene,each=length(agent))
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(size=1,alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_risk", y="Effects from other genes")
p2
#plot interaction effects
gene_61_data_tuned_new<-c(t(gene_61_data_tuned))
gene_61_data_tuned_new<-cbind(gene_61_data_tuned_new,rep(agent,time=3))
colnames(gene_61_data_tuned_new)<-c("effects","hypertension_probability")
gene_61_data_tuned_new<-as.data.frame(gene_61_data_tuned_new)
gene_61_data_tuned_new$genes<-rep(name_affectgene,each=length(agent))
p2 <- ggplot(gene_61_data_tuned_new, aes(x=hypertension_probability, y=effects, color=genes)) +
geom_point(size=1,alpha=rep(c(1,1,1),each=length(agent)))+scale_color_manual(values=c("red", "blue","green")) +geom_hline(yintercept=0, linetype="dashed", color = "black")+
labs(title="Inter-behaviors to the gene C3orf70", x="Hypertension_risk", y="Effects from other genes")
p2
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
setwd("/Users/chixiang.chen/Library/CloudStorage/OneDrive-UniversityofMarylandSchoolofMedicine/UMSOM_collaboration/Bradley/")
data<-multiplesheets("UMMC LITT Patient Database 6.13.xlsx")
data.bradley<-data$`Patient Data`
dim(data.bradley)
names(data.bradley)
#delete death patient (only 1)
data.bradley<-data.bradley[data.bradley$`Death <14D of LITT`==0,]
data.use<-data.frame(
Day.ETT.2=as.numeric(data.bradley$`>2 days intubation`),
KPS.90=data.bradley$`Preop KPS>=90 D/C to Rehab`,
V4Q6.5=data.bradley$`4q6>5`,
PT.score=as.numeric(data.bradley$`PT first visit BU6 score`),
Home.by.POD1=as.numeric(data.bradley$`Home on POD1`),
Nofocal=as.numeric(data.bradley$`No new focal neuro deficit`),
Age=as.numeric(data.bradley$Age),
Gender=data.bradley$Sex,
Race=data.bradley$Race,
Radiation=data.bradley$`postop radiation y/n`,
Dexame=data.bradley$`Preop Dexamethasone >4mg QD`,
Lesion=data.bradley$`Lesion Category`,
Up.Rec=data.bradley$`Upfront/Recurrent`,
Multifocal=data.bradley$`Multifocal Y/N`,
Multilobar=data.bradley$Multilobar,
Mid.shift=data.bradley$`Midline Shift (mm)`,
Bi.LITT=data.bradley$`Bilateral LITT Y/N`,
Eloquent=data.bradley$`Eloquent Y/N`,
Laser.time=as.numeric(data.bradley$`Laser Treatment Time (min)`),
Energy=as.numeric(data.bradley$`Energy (kj)`),
Tumor.vol=as.numeric(data.bradley$`Preop Tumor Volume Brainlab (CC)`),
Watts=as.numeric(data.bradley$Watts),
kJCC=as.numeric(data.bradley$`kJ/CC of Ablation`),
Tumor.depth=as.numeric(data.bradley$`Tumor depth from cortical surface(minimum, mm)`),
Tumor.distance=as.numeric(data.bradley$`Tumor distance to CST (mm)`),
Blue.cst=as.numeric(data.bradley$`Blue CST overlap (depth mm)`), #to threshold this, 0 and >0
Blue.ntumorV=as.numeric(data.bradley$`Blue nontumor V`),
Blue.coverage=as.numeric(data.bradley$`Blue tumor coverage (%)`),
EOA=as.numeric(data.bradley$`EOA%`)
)
#library(asbio)
#library(epiR) #you may have to update R
library(nlme)
library(readxl)
library(forestplot)
library(dplyr)
library(lavaan)
library(semPlot)
library(logistf)
library(ggplot2)
library(MASS)
library(chngpt)
library(segmented)
library(glmnet)
multiplesheets <- function(fname) {
# getting info about all excel sheets
sheets <- readxl::excel_sheets(fname)
tibble <- lapply(sheets, function(x) readxl::read_excel(fname, sheet = x))
data_frame <- lapply(tibble, as.data.frame)
# assigning names to data frames
names(data_frame) <- sheets
# return data frame
data_frame
}
setwd("/Users/chixiang.chen/Library/CloudStorage/OneDrive-UniversityofMarylandSchoolofMedicine/UMSOM_collaboration/Bradley/")
data<-multiplesheets("UMMC LITT Patient Database 6.13.xlsx")
data.bradley<-data$`Patient Data`
dim(data.bradley)
names(data.bradley)
#delete death patient (only 1)
data.bradley<-data.bradley[data.bradley$`Death <14D of LITT`==0,]
data.use<-data.frame(
Day.ETT.2=as.numeric(data.bradley$`>2 days intubation`),
KPS.90=data.bradley$`Preop KPS>=90 D/C to Rehab`,
V4Q6.5=data.bradley$`4q6>5`,
PT.score=as.numeric(data.bradley$`PT first visit BU6 score`),
Home.by.POD1=as.numeric(data.bradley$`Home on POD1`),
Nofocal=as.numeric(data.bradley$`No new focal neuro deficit`),
Age=as.numeric(data.bradley$Age),
Gender=data.bradley$Sex,
Race=data.bradley$Race,
Radiation=data.bradley$`postop radiation y/n`,
Dexame=data.bradley$`Preop Dexamethasone >4mg QD`,
Lesion=data.bradley$`Lesion Category`,
Up.Rec=data.bradley$`Upfront/Recurrent`,
Multifocal=data.bradley$`Multifocal Y/N`,
Multilobar=data.bradley$Multilobar,
Mid.shift=data.bradley$`Midline Shift (mm)`,
Bi.LITT=data.bradley$`Bilateral LITT Y/N`,
Eloquent=data.bradley$`Eloquent Y/N`,
Laser.time=as.numeric(data.bradley$`Laser Treatment Time (min)`),
Energy=as.numeric(data.bradley$`Energy (kj)`),
Tumor.vol=as.numeric(data.bradley$`Preop Tumor Volume Brainlab (CC)`),
Watts=as.numeric(data.bradley$Watts),
kJCC=as.numeric(data.bradley$`kJ/CC of Ablation`),
Tumor.depth=as.numeric(data.bradley$`Tumor depth from cortical surface(minimum, mm)`),
Tumor.distance=as.numeric(data.bradley$`Tumor distance to CST (mm)`),
Blue.cst=as.numeric(data.bradley$`Blue CST overlap (depth mm)`), #to threshold this, 0 and >0
Blue.ntumorV=as.numeric(data.bradley$`Blue nontumor V`),
Blue.coverage=as.numeric(data.bradley$`Blue tumor coverage (%)`),
EOA=as.numeric(data.bradley$`EOA%`)
)
head(data.use)
names(data.use)
summary(data.use$Blue.cst)
table(data.use)
table(data.use$Blue.cst)
devtools::document()
