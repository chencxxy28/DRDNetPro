\documentclass[12pt]{report}

\usepackage{longtable}
\usepackage[section]{placeins}

\usepackage{mathpazo}
\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{verbatim}
\usepackage{calc}
\usepackage{url}
\usepackage{amsmath}
\usepackage{graphicx}
\usepackage[authoryear]{natbib}


\usepackage{color}
\definecolor{forestgreen}{rgb}{.137,0.557,0.137}
\definecolor{gray}{rgb}{.25,.25,.25}
\definecolor{steelblue}{rgb}{0.1372549, 0.4196078, 0.5568627}
\definecolor{navyblue}{rgb}{0,0,.5}
\definecolor{goldenrod}{rgb}{ 0.54509804, 0.39607843, 0.03137255}
%\definecolor{tt}{rgb}{ 0.5450980, 0.1372549, 0.1372549}
\definecolor{fun}{rgb}{ 0.5450980, 0.1372549, 0.1372549}
\definecolor{pack}{rgb}{0.2588235, 0.2588235, 0.4352941}
\definecolor{violet}{rgb}{0.3098039, 0.1843137, 0.3098039}
\definecolor{purple}{rgb}{.5,0,.5}
\definecolor{deeppink}{rgb}{  0.54509804, 0.03921569, 0.31372549}
\definecolor{fsred}{rgb}{.75,0,0}
\definecolor{gray}{rgb}{0.7421875,0.7421875,0.7421875}

\usepackage[unicode=true,pdfusetitle,
            bookmarks=true,bookmarksnumbered=true,bookmarksopenlevel=3,
            breaklinks=true,pdfborder={0 0 1},backref=false,colorlinks=true,linktoc=all,linkcolor=fun]
{hyperref}
%\usepackage{breakurl}

\usepackage[top=.5in, bottom=.85in, left=.5in, right=.5in]{geometry}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
%\renewcommand{\textfraction}{0.05}
%\renewcommand{\topfraction}{0.8}
%\renewcommand{\bottomfraction}{0.8}
%\renewcommand{\floatpagefraction}{0.75}

% for andre simon's highlight
\let\hlslc\hlcom \let\hlppc\hlcom
\let\hlesc\hlstd \let\hlpps\hlstd \let\hllin\hlstd


\usepackage{fancyhdr}
\setlength{\headheight}{30pt}
\setlength{\footskip}{30pt}


\pagestyle{fancy}
%\renewcommand{\chaptermark}[1]{ \markboth{#1}{} }
%\renewcommand{\sectionmark}[1]{ \markright{#1}{} }
\renewcommand{\footrulewidth}{.5pt}

\fancyhf{}
%\rhead{\thepage}
\rfoot{\thepage}
\fancyhead[R]{Chixiang Chen}
\fancyhead[L]{EVD project}
%\fancyhead[L]{\textit{ \nouppercase{\rightmark}} }
%\fancyfoot[L]{\textit{ \nouppercase{\leftmark}} }
\fancyfoot[L]{\today }

\fancypagestyle{plain}{ %
  \fancyhf{} % remove everything
  \renewcommand{\headrulewidth}{0pt} % remove lines as well
  \renewcommand{\footrulewidth}{0pt}
}

\begin{document}
\tableofcontents
<<load, include=FALSE>>=
library(knitr)
library(reporttools)
library(xtable)
library(ICC)
#library(asbio)
#library(epiR) #you may have to update R
library(nlme)
library(readxl)
library(forestplot)
library(dplyr)
library(fastDummies)
library(pROC)
library(MASS)
library(ranger)
library(vip)
library(gbm)
library(pdp)
library(vtreat)
library(xgboost)



multiplesheets <- function(fname) {
  
  # getting info about all excel sheets
  sheets <- readxl::excel_sheets(fname)
  tibble <- lapply(sheets, function(x) readxl::read_excel(fname, sheet = x))
  data_frame <- lapply(tibble, as.data.frame)
  
  # assigning names to data frames
  names(data_frame) <- sheets
  
  # return data frame
  data_frame
}

setwd("/Users/chixiang.chen/Library/CloudStorage/OneDrive-UniversityofMarylandSchoolofMedicine/UMSOM_collaboration/solomon")
data<-multiplesheets("EVD Database Corrected for Analysis FINAL.xlsx")
data.EVD<-data$Sheet1
dim(data.EVD)
names(data.EVD)
table(data.EVD$`Blood thinners ( See Key )`)

prop.table(table(data.EVD$`Blood thinners ( See Key )`,data.EVD$`Tract Hemorrhage within 24 hr of placement (No = 0, Yes = 1)`),1)

table(data.EVD$`Blood thinners ( See Key )`,data.EVD$`Tract Hemorrhage within 24 hr of placement (No = 0, Yes = 1)`)

fisher.test(table(data.EVD$`Blood thinners ( See Key )`,data.EVD$`Tract Hemorrhage within 24 hr of placement (No = 0, Yes = 1)`)[c(1,2),]) #1(weak),2,7; maybe can add 9 to check

data.EVD<-(dummy_cols(data.EVD,select_columns = 'Blood thinners ( See Key )'))

data.use<-data.frame(Hemorrhage.24=data.EVD$`Tract Hemorrhage within 24 hr of placement`, 
                     Thinners.all=data.EVD$`Blood thinners ( See Key )`,
Thinners1=data.EVD$`Blood Thinners (0=None, 1= ASA, 2= Plavix, 3=Coumadin, 4= Heparin, 5= Lovenox, 6= Eliquis, 7 = Xarelto, 8 = Pradaxa, 9 = TPA)`,
Thinners2=data.EVD$`Blood Thinners (0=None, 1= ASA, 2= Plavix, 3=Coumadin, 4= Heparin, 5= Lovenox, 6= Eliquis, 7 = Xarelto, 8 = Pradaxa, 9 = TPA)2`,
Thinners3=data.EVD$`Blood Thinners (0=None, 1= ASA, 2= Plavix, 3=Coumadin, 4= Heparin, 5= Lovenox, 6= Eliquis, 7 = Xarelto, 8 = Pradaxa, 9 = TPA)22`,
Thinners.c1=data.EVD$`Blood thinners ( See Key )_1`,
Thinners.c2=data.EVD$`Blood thinners ( See Key )_2`,
Thinners.c3=data.EVD$`Blood thinners ( See Key )_3`,
Thinners.c4=data.EVD$`Blood thinners ( See Key )_4`,
Thinners.c5=data.EVD$`Blood thinners ( See Key )_5`,
Thinners.c6=data.EVD$`Blood thinners ( See Key )_6`,
Thinners.c7=data.EVD$`Blood thinners ( See Key )_7`,
Thinners.c8=data.EVD$`Blood thinners ( See Key )_8`,
Thinners.c9=data.EVD$`Blood thinners ( See Key )_9`,
Thinners.c10=data.EVD$`Blood thinners ( See Key )_10`,
Thinners.c11=data.EVD$`Blood thinners ( See Key )_11`,
Thinners.c12=data.EVD$`Blood thinners ( See Key )_12`,
Thinners.c13=data.EVD$`Blood thinners ( See Key )_13`,
Thinners.c14=data.EVD$`Blood thinners ( See Key )_14`,
Age=data.EVD$Age,
Gender=data.EVD$Sex,
Diagnosis=data.EVD$`Diagnosis-Indication for EVD (SAH = 1, Supratentorial ICH = 2,Â Infratentorial ICH = 3, Pure IVH = 4, Mass Lesion = 5, Trauma = 6, Stroke = 7, Infection = 8, Diffuse Cerebral edema = 9, 10 = CSF Leak diversion)`,
Location.perf=data.EVD$`Location EVD performed (UMMC = 0, STC = 1)`,
Num.pass=data.EVD$`Number of Passes`,
IVH=data.EVD$`IVH? (N=0 Y=1)`,
Num.revise=data.EVD$`Number of Times revised`,
Pt.demo=data.EVD$`Pt demographics (1= African American, 2= White, 3=Asian, 4= Hispanic, 5= Other)`,
GCS=data.EVD$`GCS Dichotomized (Mild = 1, Moderate = 2, Severe = 3)`,
EVD.loc=data.EVD$`EVD Location (1= Right Frontal, 2 = Left Frontal, 3 = Right Occipital, 4 = Left Occipital)`,
Open.pres=data.EVD$`Opening Pressure`,
Mortality=data.EVD$`Mortality (N=0 Y=1)`,
Thrombocytopenia=data.EVD$`Thrombocytopenia after correction? (No = 0, Y= 1)`
)

data.use$Thinners.c9c10<-ifelse(data.use$Thinners.c9==1 | data.use$Thinners.c10==1,1,0)
data.use$Thinners.c11c12c13<-ifelse(data.use$Thinners.c11==1 | data.use$Thinners.c12==1 | data.use$Thinners.c13==1,1,0)

data.use$Diagnosis.6<-ifelse(data.use$Diagnosis==6,1,0)
data.use$Pt.demo.3<-ifelse(data.use$Pt.demo ==3,1,0)


#create subdata
data.use.1<-data.use[data.use$Thinners.all %in% c(0,1),]
data.use.2<-data.use[data.use$Thinners.all %in% c(0,2),]
data.use.3<-data.use[data.use$Thinners.all %in% c(0,3),]
data.use.4<-data.use[data.use$Thinners.all %in% c(0,4),]
data.use.5<-data.use[data.use$Thinners.all %in% c(0,5),]
data.use.6<-data.use[data.use$Thinners.all %in% c(0,6),]
data.use.7<-data.use[data.use$Thinners.all %in% c(0,7),]
data.use.8<-data.use[data.use$Thinners.all %in% c(0,8),]
data.use.9<-data.use[data.use$Thinners.all %in% c(0,9),]
data.use.10<-data.use[data.use$Thinners.all %in% c(0,10),]
data.use.11<-data.use[data.use$Thinners.all %in% c(0,11),]
data.use.12<-data.use[data.use$Thinners.all %in% c(0,12),]
data.use.13<-data.use[data.use$Thinners.all %in% c(0,13),]
data.use.14<-data.use[data.use$Thinners.all %in% c(0,14),]

data.use.9.10<-data.use[data.use$Thinners.all %in% c(0,9:10),]
data.use.11.12.13<-data.use[data.use$Thinners.all %in% c(0,11:13),]


#check abnormal values
table(data.use$Hemorrhage.24)
table(data.use$Thinners1)
table(data.use$Thinners2)
table(data.use$Thinners3)
table(data.use$Diagnosis)
table(data.use$Gender)
data.use$Gender<-ifelse(data.use$Gender=="F", 1,0 )
head(data.use)
data.use<-data.frame(lapply(data.use,as.numeric))
str(data.use)

#create new variables for Thinners
table(data.use$Thinners1,data.use$Hemorrhage.24)
table(data.use$Thinners2,data.use$Hemorrhage.24)
table(data.use$Thinners3,data.use$Hemorrhage.24)

data.use$Thinners1.2l<-ifelse(data.use$Thinners1==0,0,1)
data.use$Thinners2.2l<-ifelse(data.use$Thinners2==0,0,1)
data.use$Thinners3.2l<-ifelse(data.use$Thinners3==0,0,1)
data.use$Thinners.accum<-data.use$Thinners1.2l+data.use$Thinners2.2l+data.use$Thinners3.2l
#data.use$Thinners.accum.2l<-ifelse(data.use$Thinners.accum<=1,0,1)
data.use$Thinners.accum.2l<-ifelse(data.use$Thinners.accum<=0,0,1)
data.use$Thinners.accum.3l<-ifelse(data.use$Thinners.accum<=0,"0",
                                   ifelse(data.use$Thinners.accum==1,"1",">=2"))
data.use$Thinners.accum.3l<-relevel(as.factor(data.use$Thinners.accum.3l),ref="0")

data.use$Thinners1.2l<-ifelse(data.use$Thinners1==0,"No","Yes")
data.use$Thinners2.2l<-ifelse(data.use$Thinners2==0,"No","Yes")
data.use$Thinners3.2l<-ifelse(data.use$Thinners3==0,"No","Yes")

chisq.test(table(data.use$Thinners1.2l,data.use$Hemorrhage.24))
chisq.test(table(data.use$Thinners2.2l,data.use$Hemorrhage.24))
fisher.test(table(data.use$Thinners3.2l,data.use$Hemorrhage.24))
fisher.test(table(data.use$Thinners.accum,data.use$Hemorrhage.24))
chisq.test(table(data.use$Thinners.accum.2l,data.use$Hemorrhage.24))

my.stats <- list("n", "mean", "s","range" = function(x){return(max(x)-min(x))},"na","min","max","median")
my.stats.less <- list("mean", "s","min","max")
my.stats.cv <- list("n", "mean", "s","range" = function(x){return(max(x)-min(x))},"na","min","CV" =function(x){return(sd(x,na.rm = T)/mean(x,na.rm = T))} )
@

<<setup, include=FALSE>>=
opts_chunk$set(autodep=TRUE,cache=TRUE,warning=FALSE,out.width="\\textwidth",fig.width=9, fig.height=6)
options(replace.assign=TRUE,width=70)
@
% comments WIQ.stairs, Total.MMSE.score has charaters typo


<<check data,include=FALSE>>=
#Table1############################
names(data.use)
table1.1<- data.frame(data.use[,c("Age","Num.pass","Num.revise","Open.pres")])
table1.1<-as.data.frame(apply(table1.1, 2, as.numeric))

table1.2<- data.use[,c("Hemorrhage.24","Location.perf","IVH","Pt.demo","GCS","EVD.loc","Thinners1","Thinners2","Thinners3","Gender","Diagnosis","Thinners.all","Mortality","Num.revise","Thrombocytopenia")]
table1.2<-as.data.frame(apply(table1.2, 2, as.factor))

table1.1.uni<- data.frame(data.use[,c("Age","Num.pass","Num.revise","Open.pres")])
table1.1.uni<-as.data.frame(apply(table1.1.uni, 2, as.numeric))

table1.2.uni<- data.use[,c("Thinners.accum.3l", "Thinners.accum","Gender","Location.perf","IVH","Pt.demo","Pt.demo.3","GCS","EVD.loc","Diagnosis","Diagnosis.6","Thrombocytopenia")]
table1.2.uni<-as.data.frame(apply(table1.2.uni, 2, as.factor))


table1.2.uni.1<-data.use.1[,c("Hemorrhage.24","Thinners.c1")]
table1.2.uni.1<-as.data.frame(apply(table1.2.uni.1, 2, as.factor))

table1.2.uni.2<-data.use.2[,c("Hemorrhage.24","Thinners.c2")]
table1.2.uni.2<-as.data.frame(apply(table1.2.uni.2, 2, as.factor))

table1.2.uni.3<-data.use.3[,c("Hemorrhage.24","Thinners.c3")]
table1.2.uni.3<-as.data.frame(apply(table1.2.uni.3, 2, as.factor))

table1.2.uni.4<-data.use.4[,c("Hemorrhage.24","Thinners.c4")]
table1.2.uni.4<-as.data.frame(apply(table1.2.uni.4, 2, as.factor))

table1.2.uni.5<-data.use.5[,c("Hemorrhage.24","Thinners.c5")]
table1.2.uni.5<-as.data.frame(apply(table1.2.uni.5, 2, as.factor))

table1.2.uni.6<-data.use.6[,c("Hemorrhage.24","Thinners.c6")]
table1.2.uni.6<-as.data.frame(apply(table1.2.uni.6, 2, as.factor))

table1.2.uni.7<-data.use.7[,c("Hemorrhage.24","Thinners.c7")]
table1.2.uni.7<-as.data.frame(apply(table1.2.uni.7, 2, as.factor))

table1.2.uni.8<-data.use.8[,c("Hemorrhage.24","Thinners.c8")]
table1.2.uni.8<-as.data.frame(apply(table1.2.uni.8, 2, as.factor))

table1.2.uni.9<-data.use.9[,c("Hemorrhage.24","Thinners.c9")]
table1.2.uni.9<-as.data.frame(apply(table1.2.uni.9, 2, as.factor))

table1.2.uni.10<-data.use.10[,c("Hemorrhage.24","Thinners.c10")]
table1.2.uni.10<-as.data.frame(apply(table1.2.uni.10, 2, as.factor))

table1.2.uni.11<-data.use.11[,c("Hemorrhage.24","Thinners.c11")]
table1.2.uni.11<-as.data.frame(apply(table1.2.uni.11, 2, as.factor))

table1.2.uni.12<-data.use.12[,c("Hemorrhage.24","Thinners.c12")]
table1.2.uni.12<-as.data.frame(apply(table1.2.uni.12, 2, as.factor))

table1.2.uni.13<-data.use.13[,c("Hemorrhage.24","Thinners.c13")]
table1.2.uni.13<-as.data.frame(apply(table1.2.uni.13, 2, as.factor))

table1.2.uni.14<-data.use.14[,c("Hemorrhage.24","Thinners.c14")]
table1.2.uni.14<-as.data.frame(apply(table1.2.uni.14, 2, as.factor))

table1.2.uni.9.10<-data.use.9.10[,c("Hemorrhage.24","Thinners.c9c10")]
table1.2.uni.9.10<-as.data.frame(apply(table1.2.uni.9.10, 2, as.factor))

table1.2.uni.11.12.13<-data.use.11.12.13[,c("Hemorrhage.24","Thinners.c11c12c13")]
table1.2.uni.11.12.13<-as.data.frame(apply(table1.2.uni.11.12.13, 2, as.factor))
@

<<Multivariate analysis,include=FALSE>>=
###for main outcome
#multivariate analysis for the number of use of medications
set.seed(123456)
confint<-function(fit)
{
  LL=summary(fit)$coefficients[,1]-1.96*summary(fit)$coefficients[,2]
  UL=summary(fit)$coefficients[,1]+1.96*summary(fit)$coefficients[,2]
  return(cbind(LL,UL))
}

names(data.use)
data.use.multi<-data.use
data.use.multi.1<-data.use.multi[complete.cases(data.use.multi[,c("Hemorrhage.24","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia")]),]
data.use.multi.1$Age<-as.numeric(data.use.multi.1$Age)
fit1<-glm(Hemorrhage.24~ Age+Thinners.accum.3l +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 +Thrombocytopenia,data=data.use.multi.1,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.num.usage<-final.table

#do ROC curve
n<-nrow(data.use.multi.1)
sample.ind<-sample(n,size=round(0.8*n))
data.use.multi.1.train<-data.use.multi.1[sample.ind,]
data.use.multi.1.test<-data.use.multi.1[!(1:n %in% sample.ind),]
fit1<-glm(Hemorrhage.24~ Age+factor(Thinners.accum.3l) +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 +Thrombocytopenia,data=data.use.multi.1.train,family = binomial(link = "logit"))
test_prob = predict(fit1, newdata = data.use.multi.1.test, type = "response")
test_roc_num.usage = roc(data.use.multi.1.test$Hemorrhage.24 ~ test_prob, plot = TRUE, print.auc = TRUE)


#do stepwise variable selection
# stepAIC(fit1,direction="both",scope=list(lower=~factor(Thinners.accum),upper=fit1))
fit1<-glm(Hemorrhage.24~ (Thinners.accum.3l) +Location.perf + Pt.demo.3,data=data.use.multi.1,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.num.usage.after<-final.table

#do ROC curve
fit1<-glm(Hemorrhage.24~ Thinners.accum.3l +Location.perf + Pt.demo.3,data=data.use.multi.1.train,family = binomial(link = "logit"))
test_prob = predict(fit1, newdata = data.use.multi.1.test, type = "response")
test_roc_num.usage.after = roc(data.use.multi.1.test$Hemorrhage.24 ~ test_prob, plot = TRUE, print.auc = TRUE)
sens.ci <- ci.se(test_roc_num.usage.after)
plot(sens.ci, type="shape", col="lightblue")
# pdf("rplot.pdf") 
plot(sens.ci, type="bars")

#multivariate analysis for specific combinations of medications
data.use.multi<-data.use[data.use$Thinners.all %in% c(0,1,2,7,11:13),]
data.use.multi.2<-data.use.multi[complete.cases(data.use.multi[,c("Hemorrhage.24","Age","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13","Location.perf","IVH","Diagnosis.6","Pt.demo.3", "Thrombocytopenia")]),]
data.use.multi.2$Age<-as.numeric(data.use.multi.2$Age)
fit1<-glm(Hemorrhage.24~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13  +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 + Thrombocytopenia,data=data.use.multi.2,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.specific<-final.table

#do ROC curve
n<-nrow(data.use.multi.2)
sample.ind<-sample(n,size=round(0.8*n))
data.use.multi.2.train<-data.use.multi.2[sample.ind,]
data.use.multi.2.test<-data.use.multi.2[!(1:n %in% sample.ind),]
fit1<-glm(Hemorrhage.24~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13  +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 + Thrombocytopenia,data=data.use.multi.2.train,family = binomial(link = "logit"))
test_prob = predict(fit1, newdata = data.use.multi.2.test, type = "response")
test_roc_specific = roc(data.use.multi.2.test$Hemorrhage.24 ~ test_prob, plot = TRUE, print.auc = TRUE)

#do stepwise variable selection
# stepAIC(fit1,direction="both",scope = list(lower=~Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13,upper=fit1))
fit1<-glm(Hemorrhage.24~Thinners.c2+Thinners.c7 + Location.perf  +Pt.demo.3,data=data.use.multi.2,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.specific.after<-final.table

#do ROC curve
fit1<-glm(Hemorrhage.24~Thinners.c2+Thinners.c7 + Location.perf  +Pt.demo.3,data=data.use.multi.2.train,family = binomial(link = "logit"))
test_prob = predict(fit1, newdata = data.use.multi.2.test, type = "response")
test_roc_specific.after = roc(data.use.multi.2.test$Hemorrhage.24 ~ test_prob, plot = T, print.auc = TRUE)
sens.ci <- ci.se(test_roc_specific.after)
plot(sens.ci, type="shape", col="lightblue")
# pdf("rplot.pdf") 
plot(sens.ci, type="bars")


###for secondary outcome:mortality
#multivariate analysis for the number of use of medications
names(data.use)
data.use.multi<-data.use
data.use.multi$Age<-as.numeric(data.use.multi$Age)
data.use.multi.3<-data.use.multi[complete.cases(data.use.multi[,c("Mortality","Hemorrhage.24","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia")]),]
fit1<-glm(Mortality~ Age+Thinners.accum.3l +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 + Hemorrhage.24+Thrombocytopenia,data=data.use.multi.3,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.num.usage.mortality<-final.table

#do stepwise variable selection
stepAIC(fit1,direction="both",scope = list(lower=~Thinners.accum.3l,upper=fit1))
fit1<-glm(Mortality~ Age+Thinners.accum.3l  + Pt.demo.3 +Thrombocytopenia,data=data.use.multi.3,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.num.usage.mortality.after<-final.table

#multivariate analysis for specific combinations of medications
data.use.multi<-data.use[data.use$Thinners.all %in% c(0,1,2,7,11:13),]
data.use.multi$Age<-as.numeric(data.use.multi$Age)
data.use.multi.4<-data.use.multi[complete.cases(data.use.multi[,c("Mortality","Hemorrhage.24","Age","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13","Location.perf","IVH","Diagnosis.6","Pt.demo.3", "Thrombocytopenia")]),]
fit1<-glm(Mortality~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13  +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 + Hemorrhage.24 + Thrombocytopenia,data=data.use.multi.4,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.specific.mortality<-final.table

#do stepwise variable selection
stepAIC(fit1,direction="both",scope = list(lower=~Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13,upper=fit1))
fit1<-glm(Mortality~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13   + Pt.demo.3 + Thrombocytopenia,data=data.use.multi.4,family = binomial(link = "logit"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","OR","LL-95%CI","UL-95%CI")
multi.specific.mortality.after<-final.table


###for secondary outcome: revise
#multivariate analysis for the number of use of medications
names(data.use)
data.use.multi<-data.use
data.use.multi$Age<-as.numeric(data.use.multi$Age)
data.use.multi.5<-data.use.multi[complete.cases(data.use.multi[,c("Num.revise","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia")]),]
fit1<-glm(Num.revise~ Age+(Thinners.accum.3l) +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 +Thrombocytopenia,data=data.use.multi.5,family = quasipoisson(link = "log"))
#test overdispersion
# library(AER)
# dispersiontest(fit1) #yes, we have overdispersion, then i change the previous fit by quasipoisson
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","RR","LL-95%CI","UL-95%CI")
multi.num.usage.revise<-final.table

#stepwise variable selection
fit1<-glm(Num.revise~ Age+(Thinners.accum.3l) +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 +Thrombocytopenia,data=data.use.multi.5,family = poisson(link = "log"))
stepAIC(fit1,direction="both",scope = list(lower=~Thinners.accum.3l,upper=fit1))

fit1<-glm(Num.revise~ Age+Thinners.accum.3l  + Location.perf+ IVH,data=data.use.multi.5,family = quasipoisson(link = "log"))
# test overdispersion
# library(AER)
# dispersiontest(fit1) #yes, we have overdispersion, then i change the previous fit by quasipoisson
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","RR","LL-95%CI","UL-95%CI")
multi.num.usage.revise.after<-final.table


#multivariate analysis for specific combinations of medications
data.use.multi<-data.use[data.use$Thinners.all %in% c(0,1,2,7,11:13),]
data.use.multi$Age<-as.numeric(data.use.multi$Age)
data.use.multi.6<-data.use.multi[complete.cases(data.use.multi[,c("Num.revise","Hemorrhage.24","Age","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13","Location.perf","IVH","Diagnosis.6","Pt.demo.3", "Thrombocytopenia")]),]
fit1<-glm(Num.revise~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13  +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 + Thrombocytopenia,data=data.use.multi.6,family = quasipoisson(link = "log"))

results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","RR","LL-95%CI","UL-95%CI")
multi.specific.revise<-final.table

#do stepwise variable selection
fit1<-glm(Num.revise~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13  +Location.perf+ IVH + Diagnosis.6 + Pt.demo.3 + Thrombocytopenia,data=data.use.multi.6,family = poisson(link = "log"))
stepAIC(fit1,direction="both",scope = list(lower=~Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13,upper=fit1))

fit1<-glm(Num.revise~Age+Thinners.c1+Thinners.c2+Thinners.c7 + Thinners.c11c12c13  +Location.perf+ IVH,data=data.use.multi.6,family = quasipoisson(link = "log"))
results.all<-summary(fit1)
final.table<-cbind(results.all$coefficients, OR=exp(results.all$coefficients[,1]), exp(confint(fit1)))
final.table<-round(final.table,3)
colnames(final.table)<-c("Coef","SE","Z-value","P-value","RR","LL-95%CI","UL-95%CI")
multi.specific.revise.after<-final.table
@

% <<rboosting,include=FALSE>>=
% set.seed(123456)
% data.use.multi<-data.use
% data.use.multi<-data.use.multi[complete.cases(data.use.multi[,c("Hemorrhage.24","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13")]),]
% data.use.multi<-data.use.multi[,c("Hemorrhage.24","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13")]
% data.use.multi$Thinners.accum.3l<-as.factor(data.use.multi$Thinners.accum.3l)
% N<-nrow(data.use.multi)
% sample.ind<-sample(1:N,round(N*0.8))
% data.use.multi.train<-data.use.multi[sample.ind,]
% data.use.multi.test<-data.use.multi[!(1:N %in% sample.ind),]
% 
% # model_gbm = gbm(Hemorrhage.24 ~.,
% #                 data = data.use.multi.train,
% #                 distribution = "adaboost",
% #                 #train.fraction=0.5, #can replace cv
% #                 cv.folds = 5,
% #                 shrinkage = .1, #update length
% #                 n.minobsinnode = 10, #minimum observation number in each node 10
% #                 n.trees = 100,
% #                 interaction.depth = 1, #depth of each tree
% #                 bag.fraction=0.5, #for sgd
% #                 verbose=F)
% # print(model_gbm)
% # gbm.perf(model_gbm, method = "cv")
% # 
% # ##now tune the parameters
% # hyper_grid <- expand.grid(
% #   shrinkage = c(.01, .1, .3),
% #   interaction.depth = c(1, 3, 5),
% #   n.minobsinnode = c(5, 10, 15),
% #   bag.fraction = c(.5, .75, 1), 
% #   optimal_trees = 0,               # a place to dump results
% #   min_RMSE = 0                     # a place to dump results
% # )
% # 
% # # grid search 
% # for(i in 1:nrow(hyper_grid)) {
% #   # reproducibility
% #   set.seed(123)
% #   
% #   # train model
% #   gbm.tune <- gbm(
% #     formula = Hemorrhage.24 ~ .,
% #     distribution = "adaboost",
% #     data = data.use.multi.train,
% #     n.trees = 1000,
% #     interaction.depth = hyper_grid$interaction.depth[i],
% #     shrinkage = hyper_grid$shrinkage[i],
% #     n.minobsinnode = hyper_grid$n.minobsinnode[i],
% #     bag.fraction = hyper_grid$bag.fraction[i],
% #     train.fraction = .8,
% #     n.cores = NULL, # will use all cores by default
% #     verbose = FALSE
% #   )
% #   
% #   # add min training error and trees to grid
% #   hyper_grid$optimal_trees[i] <- which.min(gbm.tune$valid.error)
% #   hyper_grid$min_RMSE[i] <- sqrt(min(gbm.tune$valid.error))
% # }
% # 
% # hyper_grid %>% 
% #   dplyr::arrange(min_RMSE) %>%
% #   head(10)
% # 
% # model_gbm = gbm(Hemorrhage.24 ~.,
% #                 data = data.use.multi.train,
% #                 distribution = "adaboost",
% #                 train.fraction=1, #can replace cv
% #                 #cv.folds = 5,
% #                 shrinkage = .3, #update length
% #                 n.minobsinnode = 10, #minimum observation number in each node 10
% #                 n.trees = 289,
% #                 interaction.depth = 1, #depth of each tree
% #                 bag.fraction=0.5, #for sgd
% #                 verbose=F)
% # print(model_gbm)
% # 
% # p1 <- predict.gbm(model_gbm, data.use.multi.test[,-1],type="response")
% # haha = roc(data.use.multi.test$Hemorrhage.24 ~ p1, plot = T, print.auc = TRUE)
% # 
% # summary(
% #   model_gbm, 
% #   cBars = 10,
% #   method = relative.influence, # also can use permutation.test.gbm
% #   las = 2
% #   )
% # 
% # pdp_curve=model_gbm %>%
% #   partial(pred.var = "Age", n.trees = model_gbm$n.trees, grid.resolution = 100,type="classification") %>%
% #   autoplot(rug = TRUE, train = data.use.multi.train) 
% # 
% # ice2 <- model_gbm %>%
% #   partial(
% #     pred.var = "Age", 
% #     n.trees = model_gbm$n.trees, 
% #     grid.resolution = 100,
% #     ice = TRUE,
% #     recursive=F,
% #     type="classification"
% #     ) %>%
% #   autoplot(rug = TRUE, train = data.use.multi.train, alpha = .1, center = F) +
% #   ggtitle("Centered") 
% 
% #####################
% ###XGBoost
% #####################
% # variable names
% features <- setdiff(names(data.use.multi.train), "Hemorrhage.24")
% 
% # Create the treatment plan from the training data
% treatplan <- vtreat::designTreatmentsZ(data.use.multi.train, features, verbose = FALSE)
% 
% # Get the "clean" variable names from the scoreFrame
% new_vars <- treatplan %>%
%   magrittr::use_series(scoreFrame) %>%        
%   dplyr::filter(code %in% c("clean", "lev")) %>% 
%   magrittr::use_series(varName) 
% 
% 
% # Prepare the training data
% features_train <- vtreat::prepare(treatplan, data.use.multi.train, varRestriction = new_vars) %>% as.matrix()
% response_train <- data.use.multi.train$Hemorrhage.24
% 
% # Prepare the test data
% features_test <- vtreat::prepare(treatplan, data.use.multi.test, varRestriction = new_vars) %>% as.matrix()
% response_test <- data.use.multi.test$Hemorrhage.24
% 
% dim(features_train)
% dim(features_test)
% 
% #initial try
% set.seed(123)
% xgb.fit1 <- xgb.cv(
%   data = features_train,
%   label = response_train,
%   nrounds = 1000,
%   nfold = 5,
%   objective = "binary:logistic",  # for regression models
%   verbose = 0 ,              # silent,
%   early_stopping_rounds = 10 # stop if no improvement for 10 consecutive trees
% )
% # get number of trees that minimize error
% xgb.fit1$evaluation_log %>%
%   dplyr::summarise(
%     ntrees.train = which(train_logloss_mean == min(train_logloss_mean))[1],
%     rmse.train   = min(train_logloss_mean),
%     ntrees.test  = which(test_logloss_mean == min(test_logloss_mean))[1],
%     rmse.test   = min(test_logloss_mean),
%   )
% 
% # plot error vs number trees
% ggplot(xgb.fit1$evaluation_log) +
%   geom_line(aes(iter, train_logloss_mean), color = "red") +
%   geom_line(aes(iter, test_logloss_mean), color = "blue")
% 
% #tune parameters
% # create hyperparameter grid
% hyper_grid <- expand.grid(
%   eta = c(.01, .1, .2), #learning rate
%   max_depth = c(1, 3, 5), #tree depth
%   min_child_weight = c(1, 3, 5), #minimum number of observations in each terminal node
%   subsample = c(.5, .75, 1), #percent of training data to sample for each tree
%   colsample_bytree = c(.8, .9, 1), #???percent of columns to sample from for each tree
%   optimal_trees = 0,               # a place to dump results
%   min_logloss = 0                     # a place to dump results
% )
% 
% nrow(hyper_grid)
% 
% # grid search 
% for(i in 1:nrow(hyper_grid)) {
%   # create parameter list
%   params <- list(
%     eta = hyper_grid$eta[i],
%     max_depth = hyper_grid$max_depth[i],
%     min_child_weight = hyper_grid$min_child_weight[i],
%     subsample = hyper_grid$subsample[i],
%     colsample_bytree = hyper_grid$colsample_bytree[i]
%   )
%   
%   # reproducibility
%   set.seed(123)
%   
%   # train model
%   xgb.tune <- xgb.cv(
%     params = params,
%     data = features_train,
%     label = response_train,
%     nrounds = 5000,
%     nfold = 5,
%     objective = "binary:logistic",  # for regression models
%     verbose = 0,               # silent,
%     early_stopping_rounds = 10 # stop if no improvement for 10 consecutive trees
%   )
%   
%   # add min training error and trees to grid
%   hyper_grid$optimal_trees[i] <- which.min(xgb.tune$evaluation_log$test_logloss_mean)
%   hyper_grid$min_logloss[i] <- min(xgb.tune$evaluation_log$test_logloss_mean)
%   
%   print(i)
% }
% 
% hyper_grid %>%
%   dplyr::arrange(min_logloss) %>%
%   head(10)
% 
% #fit the final model
% params <- list(
%   eta = 0.2,
%   max_depth = 1,
%   min_child_weight = 1,
%   subsample = 0.5,
%   colsample_bytree=0.9
% )
%   
%    xgb.fit.final <- xgboost(
%     params = params,
%     data = features_train,
%     label = response_train,
%     nrounds = 17,
%     objective = "binary:logistic",  # for regression models
%     verbose = 0              # silent,
% )
%    
%    
% ###evaluate
% # create importance matrix
% importance_matrix <- xgb.importance(model = xgb.fit.final)
% 
% # variable importance plot
% xgb.plot.importance(importance_matrix, top_n = 10, measure = "Gain")
%    
% pdp <- xgb.fit.final %>%
%   partial(pred.var = "Age", n.trees = 17, grid.resolution = 100, train = features_train,type = "classification") %>%
%   autoplot(rug = TRUE, train = features_train) +
%   ggtitle("PDP")
% 
% # ice <- xgb.fit.final %>%
% #   partial(pred.var = "Age", n.trees = 17, grid.resolution = 100, train = features_train, ice = TRUE, type = "classification",    recursive=F) %>%
% #   autoplot(rug = TRUE, train = features_train, alpha = .1, center = TRUE) +
% #   ggtitle("ICE")
% # 
% # gridExtra::grid.arrange(pdp, ice, nrow = 1)
% 
% 
% p1 <- predict(xgb.fit.final, features_test,type="response")
% haha = roc(response_test ~ p1, plot = T, print.auc = TRUE)
% @

<<random forest,include=FALSE>>=
# set.seed(123456)
# data.use.multi<-data.use
# data.use.multi<-data.use.multi[complete.cases(data.use.multi[,c("Hemorrhage.24","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13")]),]
# data.use.multi<-data.use.multi[,c("Hemorrhage.24","Age","Thinners.accum.3l","Location.perf","IVH","Diagnosis.6","Pt.demo.3","Thrombocytopenia","Thinners.c1","Thinners.c2","Thinners.c7","Thinners.c11c12c13")]
# data.use.multi$Hemorrhage.24<-as.factor(data.use.multi$Hemorrhage.24)
# data.use.multi$Thinners.accum.3l<-as.factor(data.use.multi$Thinners.accum.3l)
# N<-nrow(data.use.multi)
# sample.ind<-sample(1:N,round(N*0.8))
# data.use.multi.train<-data.use.multi[sample.ind,]
# data.use.multi.test<-data.use.multi[!(1:N %in% sample.ind),]
# 
# 
# rf<-ranger(Hemorrhage.24~., num.trees=1000,data=data.use.multi.train,replace=T,write.forest = T,importance="impurity")
# pred <- predict(rf, data = data.use.multi.train)
# table(data.use.multi.train$Hemorrhage.24, predictions(pred))
# print(rf)
# ranger::importance(rf)
# require(vip)
# v1 <- vip(rf)
# grid.arrange(v1, ncol=1)
# 
# 
# rf <-randomForest(Hemorrhage.24~., xtest=data.use.multi.test[,-1],ytest=data.use.multi.test$Hemorrhage.24,ntree=1000,data=data.use.multi.train,replace=T,importance=T)
# print(rf)
# plot(rf)
# importance(rf)
# varImpPlot(rf)
# 
# rf <-randomForest(Hemorrhage.24~.,ntree=1000,data=data.use.multi.train,replace=T,importance=T)
# p1 <- predict(rf, data.use.multi.test,type="prob")
# haha = roc(data.use.multi.test$Hemorrhage.24 ~ p1[,2], plot = T, print.auc = TRUE)
@

\newpage
\chapter{Table1:  Summary information about those variables of our potential interest (including mean, standard deviation, range, etc.). }
<<results='asis',echo=FALSE>>=
tableContinuous(table1.1,stat=my.stats,prec = 2, longtable = T,cap = "Continuous varibles")
tableNominal(table1.2, cumsum = FALSE,miss.cat=1:ncol(table1.2), prec=2,longtable = T,cap = "Categorical variables")
@

\newpage
\chapter{Table2:  Stratefied analysis for Hemorrhage.24h (univariate analysis). }
<<results='asis',echo=FALSE>>=
tableContinuous(table1.1.uni,stat=my.stats.less,prec = 2, longtable = T,group=table1.2$Hemorrhage.24,print.pval="anova",cap = "Continuous varibles")

tableNominal(table1.2.uni, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.1, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.1$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.2, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.2$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.3, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.3$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.4, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.4$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.5, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.5$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.6, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.6$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.7, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.7$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.8, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.8$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.9, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.9$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.10, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.10$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.11, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.11$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.12, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.12$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.13, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.13$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.14, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.14$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.9.10, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.9.10$Hemorrhage.24,print.pval="fisher")

tableNominal(table1.2.uni.11.12.13, cumsum = FALSE, prec=2,longtable = T,cap = "Categorical variables",group=table1.2.uni.11.12.13$Hemorrhage.24,print.pval="fisher")
@



\newpage
\chapter{Multivariate analysis}
\section{For the primary outcome: }
<<results='asis',echo=FALSE>>=
print(xtable(multi.num.usage,digits=rep(3,8),caption="Multivariate analysis for number of medication use"))

print(xtable(multi.num.usage.after,digits=rep(3,8),caption="Multivariate analysis for number of medication use after stepwise variable selection"))

print(xtable(multi.specific,digits=rep(3,8),caption="Multivariate analysis for specific combinations of medications"))

print(xtable(multi.specific.after,digits=rep(3,8),caption="Multivariate analysis for specific combinations of medications after stepwise variable selection"))
#print(xtable(final.table.udiff,caption="T1c-T2*"))
@

\newpage
\section{For the secondary outcome: mortality}
<<results='asis',echo=FALSE>>=
print(xtable(multi.num.usage.mortality,digits=rep(3,8),caption="Multivariate analysis for number of medication use"))
print(xtable(multi.num.usage.mortality.after,digits=rep(3,8),caption="Multivariate analysis for number of medication use after stepwise variable selection"))
print(xtable(multi.specific.mortality,digits=rep(3,8),caption="Multivariate analysis for specific combinations of medications"))
print(xtable(multi.specific.mortality.after,digits=rep(3,8),caption="Multivariate analysis for specific combinations of medications after stepwise variable selection"))
#print(xtable(final.table.udiff,caption="T1c-T2*"))
@

\newpage
\section{For the secondary outcome: num.revise}
<<results='asis',echo=FALSE>>=
print(xtable(multi.num.usage.revise,digits=rep(3,8),caption="Multivariate analysis (Quasi-Poisson regression) for number of medication use"))
print(xtable(multi.num.usage.revise.after,digits=rep(3,8),caption="Multivariate analysis (Quasi-Poisson regression) for number of medication use after stepwise variable selection"))
print(xtable(multi.specific.revise,digits=rep(3,8),caption="Multivariate analysis (Quasi-Poisson regression) for specific combinations of medications"))
print(xtable(multi.specific.revise.after,digits=rep(3,8),caption="Multivariate analysis (Quasi-Poisson regression) for specific combinations of medications after stepwise variable selection"))
#print(xtable(final.table.udiff,caption="T1c-T2*"))
@

\end{document}
% \newpage
% \section{Table1:  Clinical characteristics of participants with peripheral artery disease (PAD) and controls. Pared T-test. }
% <<results='asis',echo=FALSE>>=
% print(xtable(table1.a,caption="mean and sd for two groups "))
% print(xtable(table1.b,caption="yes number and percentage for two groups "))
% @
%
% \newpage
% \section{Table 2. Neuropsychological performance of participants with peripheral artery disease (PAD) and controls. Values are means (standard deviation) or percentage of participants in each group. }
% <<results='asis',echo=FALSE>>=
% tableContinuous(table2.control,stat=my.stats,prec = 2, longtable = T,cap = "control group")
% tableContinuous(table2.pad,stat=my.stats,prec = 2, longtable = T,cap = "pad group")
% print(xtable(table2,caption="table 2 mean and sd for three groups "))
%
% @
% \newpage
% \section{Table 3. Multiple regression models between the PAD indicator (predictor) and Neuropsychological performance outcome variables. (TRA and TRB are taking log transformation) Model 1: unadjusted(only covariate is PAD). Model 2:  adjusted for age, sex, race, education(categorical).Model 3:adjusted for Model 2 plus Metabolic Syndrome, Obesity, CAD, CVD, hypertension, dyslipidemia, diabetes, current smoking. }
% <<results='asis',echo=FALSE>>=
% print(xtable(cbind(table4.est,table4.p),digits=4,caption="estimations and p value for the PAD variable"),size="\\footnotesize")
% print(xtable(table4.aic,digits=4,caption="AIC for three models "),size="\\footnotesize")
% print(xtable(table4.ci,digits=4,caption=" confidence intervals"))
% #print(xtable(table4.p.r2,digits=4,caption=" Partial R2"))
% print(xtable(table4.r2,digits=4,caption=" Overall R2"))
%
% @

